
██████╗ ███████╗███████╗███████╗███╗   ██╗██████╗ ███████╗██████╗ 
██╔══██╗██╔════╝██╔════╝██╔════╝████╗  ██║██╔══██╗██╔════╝██╔══██╗
██║  ██║█████╗  █████╗  █████╗  ██╔██╗ ██║██║  ██║█████╗  ██████╔╝
██║  ██║██╔══╝  ██╔══╝  ██╔══╝  ██║╚██╗██║██║  ██║██╔══╝  ██╔══██╗
██████╔╝███████╗██║     ███████╗██║ ╚████║██████╔╝███████╗██║  ██║
╚═════╝ ╚══════╝╚═╝     ╚══════╝╚═╝  ╚═══╝╚═════╝ ╚══════╝╚═╝  ╚═╝                      

              RULES:
              ======

 1. The Defending team will write a calculator which will meet the
    following specs:

     * MAXIMUM LENGTH OF ANY NUMBER (NOT INCLUDING '.'): 15
     * MAX OPERATOR COUNT IN ANY STRING: 50
     * OPERATORS SUPPORTED: +, -, *, /, ^
     * PRECEDENCE IS: 'EMDAS'
     * MAXIMUM PRECISION SHOULD BE 10 DECIMAL PLACES
     * NO PARENTHESES

   ** Avoid the colon ':' character in any error output, as this is
      the delimiter that scoring uses to get the calculator input &
      output.                                                       **

   ** No unnecessary printouts of any kind! The defending team's
      Calculator should print out only an error or the answer.   
      When the defending team prints an error, make sure to include
      the text 'Error' somewhere in the message, as this is what
      the scoring program is looking for.                           **

   ( Input to the calculator should be taken from stdin )
   ( Error output from the calculator should be printed to stderr )

2. The Defending team will write a calculator in C and submit it to
   recieve fuzzing data from the Attacking team's fuzzer via the
   'submit_calc' command, this requires the user to be in the same
   working directory as the calculator.

3. If the Attacking team's fuzz data forces the Defending team's
   calculator to output an incorrect answer, the Attacking team is
   awarded 10 pts, likewise if the Defending team's calculator gives
   a correct answer, the Defending team is awarded 10 pts.
   
4. If the Attacking team's fuzz data forces the Defending team's
   calculator to crash, the Attacking team is awarded 50 pts.

5. To see an updated log of your calculator's output and the attacking
   team's input, cat the /tmp/timestamped_fuzz_log.txt file. To update
   the defending team's calculator, use the 'update_calc' command
   (note: this clears the server's log of inputs and opens the field
   for past fuzz data to be used again).

   ( use the 'fuzzing_rules' command to print this again )

