
 ▄▄▄     ▄▄▄█████▓▄▄▄█████▓ ▄▄▄       ▄████▄   ██ ▄█▀▓█████  ██▀███  
▒████▄   ▓  ██▒ ▓▒▓  ██▒ ▓▒▒████▄    ▒██▀ ▀█   ██▄█▒ ▓█   ▀ ▓██ ▒ ██▒
▒██  ▀█▄ ▒ ▓██░ ▒░▒ ▓██░ ▒░▒██  ▀█▄  ▒▓█    ▄ ▓███▄░ ▒███   ▓██ ░▄█ ▒
░██▄▄▄▄██░ ▓██▓ ░ ░ ▓██▓ ░ ░██▄▄▄▄██ ▒▓▓▄ ▄██▒▓██ █▄ ▒▓█  ▄ ▒██▀▀█▄  
 ▓█   ▓██▒ ▒██▒ ░   ▒██▒ ░  ▓█   ▓██▒▒ ▓███▀ ░▒██▒ █▄░▒████▒░██▓ ▒██▒
 ▒▒   ▓▒█░ ▒ ░░     ▒ ░░    ▒▒   ▓▒█░░ ░▒ ▒  ░▒ ▒▒ ▓▒░░ ▒░ ░░ ▒▓ ░▒▓░
  ▒   ▒▒ ░   ░        ░      ▒   ▒▒ ░  ░  ▒   ░ ░▒ ▒░ ░ ░  ░  ░▒ ░ ▒░
  ░   ▒    ░        ░        ░   ▒   ░        ░ ░░ ░    ░     ░░   ░ 
      ░  ░                       ░  ░░ ░      ░  ░      ░  ░   ░     
                                     ░                               

              RULES:
              ======

 1. The Defending team will write a calculator which will meet the
    following specs:

     * MAXIMUM LENGTH OF ANY NUMBER (NOT INCLUDING '.'): 15
     * MAX OPERATOR COUNT IN ANY STRING: 50
     * OPERATORS SUPPORTED: +, -, *, /, ^
     * PRECEDENCE IS: 'EMDAS'
     * MAXIMUM PRECISION SHOULD BE 10 DECIMAL PLACES
     * NO PARENTHESES

2. The Attacking team is encouraged to write a calculator(s) to fuzz
   prior to the Defending team submitting theirs.

3. The Attacking team will write a fuzzer that sends input to the
   Defending team's calculator either via the 'send_fuzz_data [data]'
   command or by sending the fuzz data to 10.0.26.130 on port 1337. 

4. If the Attacking team's fuzz data forces the Defending team's
   calculator to output an incorrect answer, the Attacking team is
   awarded 10 pts, likewise if the Defending team's calculator gives
   a correct answer, the Defending team is awarded 10 pts.
   
5. If the Attacking team's fuzz data forces the Defending team's
   calculator to crash, the Attacking team is awarded 50 pts.

6. To view the scoreboard, run 'nc 10.0.26.128 1234'.

7. To view the output log from the Defending team, cat the
   '/tmp/calc_in_out' file.
   
   ( after the defending calc has been submitted, perhaps try
     'send_fuzz_data "1 + 3"' to get started :) )

   ( use the 'fuzzing_rules' command to print this again )

